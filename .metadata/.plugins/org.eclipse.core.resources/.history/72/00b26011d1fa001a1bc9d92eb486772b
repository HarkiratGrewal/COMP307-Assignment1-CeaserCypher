package Lab1;

import java.io.UnsupportedEncodingException;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.Arrays;
import java.util.Base64;
import java.util.*;
 
import javax.crypto.Cipher;
import javax.crypto.spec.SecretKeySpec;
 
public class CaesarCipher {
 
    private static SecretKeySpec secretKey;
    private static byte[] key;
 
    //set key method
    public static void setKey(String myKey) 
    {
        MessageDigest sha = null;
        try {
            key = myKey.getBytes("UTF-8");
            sha = MessageDigest.getInstance("SHA-1");
            key = sha.digest(key);
            key = Arrays.copyOf(key, 16); 
            secretKey = new SecretKeySpec(key, "AES");
        } 
        catch (NoSuchAlgorithmException e) {
            e.printStackTrace();
        } 
        catch (UnsupportedEncodingException e) {
            e.printStackTrace();
        }
    }
 
    //encryption method
    public static String encrypt(String strToEncrypt, String secret) 
    {
        try
        {
            setKey(secret);
            Cipher cipher = Cipher.getInstance("AES/ECB/PKCS5Padding");
            cipher.init(Cipher.ENCRYPT_MODE, secretKey);
            return Base64.getEncoder().encodeToString(cipher.doFinal(strToEncrypt.getBytes("UTF-8")));
        } 
        catch (Exception e) 
        {
            System.out.println("Error while encrypting: " + e.toString());
        }
        return null;
    }
 
    //decryption method
    public static String decrypt(String strToDecrypt, String secret) 
    {
        try
        {
            setKey(secret);
            Cipher cipher = Cipher.getInstance("AES/ECB/PKCS5PADDING");
            cipher.init(Cipher.DECRYPT_MODE, secretKey);
            return new String(cipher.doFinal(Base64.getDecoder().decode(strToDecrypt)));
        } 
        catch (Exception e) 
        {
            System.out.println("Error while decrypting: " + e.toString());
        }
        return null;
    }
    
    //main method
    public static void main(String[] args) 
    {
    	//creating scanner object
        Scanner input = new Scanner(System.in);  
        
        //prompt message
        System.out.print("Enter message: ");
        //user input for message
        String originalString = input.next();

        //prompt message
        System.out.print("Enter key: ");
        //user input for secret key
        String secretKey = input.next();

        //calling Encrypt method
        String encryptedString = CaesarCipher.encrypt(originalString, secretKey) ;
        //calling Decrypt method
        String decryptedString = CaesarCipher.decrypt(encryptedString, secretKey) ;
         
        //display output
        System.out.println("Original Message: " + originalString);
        System.out.println("Encrypted Message: " + encryptedString);
        System.out.println("Decrypted Message: "+ decryptedString);
        
        //close scanner object
        input.close();
    }
}